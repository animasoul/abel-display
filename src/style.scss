/**
 * The following styles get applied both on the front of your site
 * and in the editor.
 *
 * Replace them with your own styles or remove the file completely.
 */
@import url("./styles/tingle.min");
$colors: (
	1: rgb(176, 190, 197),
	2: rgb(245, 245, 245),
	3: rgb(155, 93, 229),
	4: rgb(241, 91, 181),
	5: rgb(254, 228, 64),
	6: rgb(0, 187, 249),
	7: rgb(0, 245, 212),
);
$configurations: (
	1: (
		1: (
			left: 0%,
			top: 0%,
			height: 50%,
			width: 20%,
		),
		2: (
			left: 20%,
			top: 0%,
			height: 50%,
			width: 30%,
		),
		3: (
			left: 50%,
			top: 0%,
			height: 100%,
			width: 50%,
		),
		4: (
			left: 0%,
			top: 50%,
			height: 50%,
			width: 30%,
		),
		5: (
			left: 30%,
			top: 50%,
			height: 50%,
			width: 20%,
		),
		6: (
			left: 70%,
			top: 50%,
			height: 50%,
			width: 30%,
		),
		7: (
			left: 85%,
			top: 75%,
			height: 25%,
			width: 15%,
		),
	),
	2: (
		1: (
			left: 25%,
			top: 20%,
			height: 80%,
			width: 15%,
		),
		2: (
			left: 40%,
			top: 20%,
			height: 50%,
			width: 10%,
		),
		3: (
			left: 50%,
			top: 0%,
			height: 100%,
			width: 25%,
		),
		4: (
			left: 0%,
			top: 0%,
			height: 50%,
			width: 10%,
		),
		5: (
			left: 10%,
			top: 0%,
			height: 70%,
			width: 15%,
		),
		6: (
			left: 75%,
			top: 10%,
			height: 80%,
			width: 15%,
		),
		7: (
			left: 90%,
			top: 40%,
			height: 60%,
			width: 10%,
		),
	),
	3: (
		1: (
			left: 0%,
			top: 16.5%,
			height: 32%,
			width: 20%,
		),
		2: (
			left: 20%,
			top: 2.7%,
			height: 55%,
			width: 34%,
		),
		3: (
			left: 38%,
			top: 0%,
			height: 100%,
			width: 62%,
		),
		4: (
			left: 0%,
			top: 47.3%,
			height: 55%,
			width: 34%,
		),
		5: (
			left: 34%,
			top: 56.4%,
			height: 32%,
			width: 20%,
		),
		6: (
			left: 66%,
			top: 45%,
			height: 55%,
			width: 34%,
		),
		7: (
			left: 80%,
			top: 68%,
			height: 32%,
			width: 20%,
		),
	),
);

$roundness: (
	1: (
		border-radius: 6rem,
	),
	2: (
		border-radius: 0rem,
	),
	3: (
		border-radius: 30rem,
	),
);

$roundnessShapes: (
	4: (
		1: (
			border-bottom-left-radius: 10rem,
		),
		2: (
			border-radius: 20rem,
		),
		3: (
			border-top-right-radius: 12rem,
		),
		4: (
			border-top-right-radius: 10rem,
			border-bottom-right-radius: 10rem,
		),
		5: (
			border-bottom-left-radius: 10rem,
		),
		6: (
			border-top-left-radius: 16rem,
		),
		7: (
			border-top-left-radius: 10rem,
		),
	),
);

$roundnessDefault: (
	"default": (
		border-radius: 5rem,
	),
);
.abel-display-posts {
	height: auto;
	display: grid;
	place-items: center;
	background-color: black;
	margin: 0;
	border-radius: 10px;
	overflow: hidden;

	.abel-wrapper {
		aspect-ratio: 1.618;
		width: 100%;
		position: relative;

		> .shape {
			height: 30%;
			width: 30%;
			background-color: rgba(255, 255, 255, 0.05);
			position: absolute;
			transition: left, top, height, width, border-radius;
			transition-duration: 750ms;
			transition-timing-function: ease-in-out;
			z-index: 2;
			display: flex;
			justify-content: center;
			align-items: center;
			a {
				text-align: center;
			}

			@for $i from 1 through length($colors) {
				&:nth-child(#{$i}) {
					background-color: map-get($colors, $i);
					z-index: 2;
				}
			}
		}

		@each $configuration, $shapes in $configurations {
			&[data-configuration="#{$configuration}"] {
				> .shape {
					@each $shape, $styles in $shapes {
						&:nth-child(#{$shape}) {
							@each $property, $value in $styles {
								/* stylelint-disable-next-line CssSyntaxError */
								#{$property}: $value;
							}
						}
					}
				}
			}
		}

		@each $round, $styles in $roundness {
			&[data-roundness="#{$round}"] {
				> .shape {
					@each $property, $value in $styles {
						#{$property}: $value;
					}
				}
			}
		}

		@each $round, $shapes in $roundnessShapes {
			&[data-roundness="#{$round}"] {
				@each $shape, $styles in $shapes {
					> .shape:nth-child(#{$shape}) {
						@each $property, $value in $styles {
							#{$property}: $value;
						}
					}
				}
			}
		}

		@each $round, $styles in $roundnessDefault {
			&[data-roundness="#{$round}"] {
				> .shape {
					@each $property, $value in $styles {
						#{$property}: $value;
					}
				}
			}
		}
	}
}
